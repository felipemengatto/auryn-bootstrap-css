@mixin sizeStep($size) {
	height: $size;
	line-height: $size;
	width: $size;
}

@mixin calcTopStep($value) {
	top: 12px - $value;
}

@mixin wizardColor($color-step) {

	li {

		&.active::before {
			background: $color-step;
			color: $white;
		}

		&.active::after {
			background: $color-step;
			color: $white;
		}

		&.completed {
			&::before {
				background: $color-step;
				color: $white;
			}

			+ li::after {
				background: $color-step;
			}

			&::after {
				background: $color-step;
			}
		}
	}
}

%wizard-main-steps {
	display: flex;
	margin: 0;
	padding: 0;
	width: 100%;

	li {
		display: flex;
		margin: 0;
		padding: 0;
		width: 100%;
		align-items: center;
		flex-direction: column;
		position: relative;

		&::before {
			@include sizeStep(1.5em);
			background: $secondary;
			border-radius: 50%;
			content: '';
			text-align: center;
			z-index: 2;
		}

		~ li::after {
			@include calcTopStep(2px);
			background: $secondary;
			content: '';
			height: 4px;
			position: absolute;
			right: 50%;
			width: 100%;
			z-index: 1;
		}
		

		&.completed {
			~ li::after {
				@include calcTopStep(2px);
				background: $secondary;
				content: '';
				height: 4px;
				position: absolute;
				right: 50%;
				width: 100%;
				z-index: 1;
			}

			span {
				color: $black;
			}
		}
	}

	span {
		color: $gray-900;
		font-size: 12px;
		word-break: break-all;
	}

	@include wizardColor($success);
}

.wizard-step {
	@extend %wizard-main-steps;
}

.wizard-step-sm {
	@extend %wizard-main-steps;

	li {
		&::before {
			@include sizeStep(1em);
		}
		~ li::after {
			@include calcTopStep(5px);
		}
		&.completed {
			~ li::after {
				@include calcTopStep(5px);
			}
		}
	}
}

@each $color, $value in $theme-colors {
	.wizard-#{$color} {
		@include wizardColor($value);
	}
}